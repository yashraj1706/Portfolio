import * as React from 'react';
import { motion } from 'framer-motion';
import useIntersectionObserver from '../../hooks/useIntersectionObserver';

export const AppwriteSvg = () =>  {
    const [containerRef, isVisible] = useIntersectionObserver({ threshold: 0.1 });
    return (
    <div className="containerSvg" ref={containerRef} >
      <motion.svg
        viewBox="0 0 128 128"
        xmlns="http://www.w3.org/2000/svg"
        className="itemSvg"
      >
        <motion.path
          d="M40.162 23.768C24.121 25.189 10.496 36.065 5.473 51.443 4.028 55.874 3.53 59.05 3.53 64.026s.498 8.151 1.943 12.582c7.701 23.505 34.334 34.595 56.466 23.529L64 99.094l2.085 1.043c18.222 9.123 40.377 3.293 51.703-13.672 2.962-4.407 5.237-10.118 6.208-15.544.356-2.085.474-3.744.474-6.895 0-4.976-.497-8.152-1.943-12.583-7.701-23.505-34.334-34.594-56.442-23.529L64 28.957l-2.061-1.043a41.323 41.323 0 00-14.904-4.17c-3.152-.261-3.792-.261-6.873.024zm10.142 8.601c2.322.45 6.801 2.203 9.525 3.744 3.721 2.085 7.938 5.995 10.521 9.739 1.398 2.037 3.27 5.876 4.336 8.933 1.517 4.265 1.517 14.217 0 18.481-1.848 5.214-4.194 9.266-7.345 12.607-3.744 3.981-7.227 6.326-12.44 8.364-3.317 1.303-5.307 1.73-9.217 1.919-4.787.237-9.1-.331-12.488-1.682-.853-.356-1.73-.663-1.99-.711-.498-.118-4.763-2.488-6.208-3.46-1.54-1.042-5.331-4.762-6.801-6.682-.734-.971-1.35-1.824-1.35-1.895 0-.071-.545-1.067-1.209-2.204-1.161-2.014-1.943-3.649-1.753-3.649.047 0-.213-.758-.592-1.682-1.161-2.772-1.517-5.213-1.517-10.165 0-4.953.356-7.394 1.517-10.166.379-.924.639-1.682.592-1.682-.19 0 .592-1.635 1.753-3.649.664-1.137 1.209-2.132 1.209-2.204 0-.071.616-.924 1.35-1.895 1.47-1.92 5.261-5.64 6.801-6.682 1.422-.972 5.71-3.342 6.208-3.46.26-.047 1.256-.403 2.227-.782 2.156-.853 3.554-1.184 6.043-1.469 2.559-.284 8.577-.094 10.828.332z"
          initial="hidden"
          animate={isVisible ? 'visible' : 'hidden'}
          variants={{
            hidden: {
              opacity: 0,
              pathLength: 0,
              fill: 'rgba(240, 46, 101, 0)',
            },
            visible: {
              opacity: 1,
              pathLength: 1,
              fill: 'rgba(240, 46, 101, 1)',
            },
          }}
          transition={{
            default: { duration: 3, ease: 'easeInOut' },
            fill: { duration: 3, ease: [1, 0, 0.8, 1] },
          }}
        />
        <motion.path
          d="M44.973 49.737c-.048.119-.664 2.536-1.327 5.403-.688 2.867-1.777 7.393-2.393 10.07-1.185 4.905-1.896 8.128-1.896 8.554 0 .118.735.214 1.635.214h1.635l.734-3.271c.427-1.777 1.375-5.852 2.133-9.051.759-3.199 1.682-7.085 2.038-8.649.355-1.564.711-2.985.782-3.151.071-.213-.332-.284-1.564-.284-.924 0-1.73.071-1.777.165zm-12.725 10.26l-2.18 2.37.64.758c.355.426 1.327 1.493 2.156 2.37l1.517 1.611h4.313l-2.038-2.204c-1.114-1.184-2.038-2.322-2.038-2.464 0-.166.853-1.232 1.896-2.369 1.042-1.161 1.895-2.157 1.895-2.275 0-.095-.9-.166-1.99-.166h-1.967l-2.204 2.369zm16.587-2.227c0 .071.403.521.9 1.019 1.849 1.848 3.152 3.412 3.081 3.72-.047.166-.948 1.279-2.038 2.44l-1.966 2.157h2.203l2.204-.024 2.013-2.203c1.115-1.232 2.015-2.323 2.015-2.465 0-.118-.948-1.232-2.133-2.487l-2.132-2.299H50.92c-1.161 0-2.085.071-2.085.142z"
          initial="hidden"
          animate={isVisible ? 'visible' : 'hidden'}
          variants={{
            hidden: {
              opacity: 0,
              pathLength: 0,
              fill: 'rgba(240, 46, 101, 0)',
            },
            visible: {
              opacity: 1,
              pathLength: 1,
              fill: 'rgba(240, 46, 101, 1)',
            },
          }}
          transition={{
            default: { duration: 3, ease: 'easeInOut' },
            fill: { duration: 3, ease: [1, 0, 0.8, 1] },
          }}
        />
      </motion.svg>
    </div>
  )};


  export const LinkedinSvg = () => {
    const [containerRef, isVisible] = useIntersectionObserver({ threshold: 0.1 });
  
    return (
      <div className="containerSvg rounded-xl" ref={containerRef}>
        <motion.svg
          viewBox="-40.125525 -16.3118 347.75455 97.8708"
          xmlns="http://www.w3.org/2000/svg"
          className="itemSvg"
        >
          <motion.path
            fill="#0072b1"
            d="M263.744 61.1094a1.2 1.2 0 001.21-1.269c0-.9-.543-1.33-1.657-1.33h-1.8v4.712h.677v-2.054h.832l.019.025 1.291 2.029h.724l-1.389-2.1zm-.783-.472h-.785v-1.593h.995c.514 0 1.1.084 1.1.757 0 .774-.593.836-1.314.836M0 9.5874h9.993v36.4h18.5v9.222H0zm32.911 14.689h9.6v30.916h-9.6zm4.8-15.37a5.569 5.569 0 11-5.57 5.569 5.569 5.569 0 015.57-5.569m44.958.674h9.6v27.265l10.88-12.583h11.77l-12.6 14.313 12.335 16.63h-12.066l-10.191-15.282h-.126v15.28h-9.6zm-34.835 14.699h9.219v4.225h.131a10.085 10.085 0 019.09-4.994c9.735 0 11.527 6.405 11.527 14.726v16.954h-9.6v-15.031c0-3.588-.066-8.2-5-8.2-4.99 0-5.76 3.907-5.76 7.939v15.288h-9.6z"
            initial="hidden"
            animate={isVisible ? 'visible' : 'hidden'}
            variants={{
              hidden: {
                opacity: 0,
                pathLength: 0,
                fill: 'rgba (0, 114,177, 0)',
              },
              visible: {
                opacity: 1,
                pathLength: 1,
                fill: 'rgba (0, 114,177, 1)',
              },
            }}
            transition={{
              default: { duration: 3, ease: 'easeInOut' },
              fill: { duration: 3, ease: [1, 0, 0.8, 1] },
            }}
          />
                  <motion.path
          fill="#0072b1"
          d="M135.136 36.1384a5.756 5.756 0 00-5.894-5.89 6.406 6.406 0 00-6.784 5.89zm8.132 13.7a16.909 16.909 0 01-13.128 6.151c-9.6 0-17.286-6.408-17.286-16.331 0-9.923 7.685-16.328 17.286-16.328 8.973 0 14.6 6.4 14.6 16.328v3.01h-22.282a7.171 7.171 0 007.235 6.019 8.193 8.193 0 006.851-3.778zm21.482-18.089c-4.8 0-7.68 3.205-7.68 7.875s2.879 7.878 7.68 7.878 7.687-3.2 7.687-7.878-2.881-7.875-7.687-7.875m16.525 23.437h-8.838v-4.1h-.131a12.071 12.071 0 01-9.544 4.868c-9.224 0-15.3-6.657-15.3-16.071 0-8.646 5.377-16.585 14.216-16.585 3.973 0 7.684 1.087 9.861 4.1h.126V9.5774h9.609zm64.809.018h-9.6v-15.034c0-3.585-.064-8.2-4.993-8.2-5 0-5.765 3.906-5.765 7.939v15.294h-9.6v-30.916h9.216v4.225h.129a10.1 10.1 0 019.093-4.994c9.73 0 11.524 6.4 11.524 14.726zm-40.79-35.143a5.571 5.571 0 115.57-5.572 5.571 5.571 0 01-5.57 5.572m4.8 35.143h-9.61v-30.917h9.61zm40.776-55.2h-55.21a4.728 4.728 0 00-4.781 4.67v55.439a4.731 4.731 0 004.781 4.675h55.21a4.741 4.741 0 004.8-4.675V4.6704a4.738 4.738 0 00-4.8-4.67m12.173 56.411a4.418 4.418 0 10.085 0h-.085m0 8.33a3.874 3.874 0 113.809-3.938v.065a3.791 3.791 0 01-3.708 3.871h-.1"
          initial="hidden"
          animate={isVisible ? 'visible' : 'hidden'}
          variants={{
            hidden: {
              opacity: 0,
              pathLength: 0,
              fill: 'rgba (0, 114,177, 0)',
            },
            visible: {
              opacity: 1,
              pathLength: 1,
              fill: 'rgba (0, 114,177, 1)',
            },
          }}
          transition={{
            default: { duration: 3, ease: 'easeInOut' },
            fill: { duration: 3, ease: [1, 0, 0.8, 1] },
          }}
        />
      </motion.svg>
    </div>
  );
};

export const NodeJsSvg = () => {
  const [containerRef, isVisible] = useIntersectionObserver({ threshold: 0.1 });

  return (
    <div className="containerSvg" ref={containerRef}>
      <motion.svg
        xmlns="http://www.w3.org/2000/svg"
        width="64"
        height="64"
        viewBox="0 0 32 32"
        preserveAspectRatio="xMidYMid"
        fill="#8cc84b"
        className="itemSvg"
      >
        <motion.path
          d="M14.656.427c.8-.453 1.82-.455 2.6 0L29.2 7.16c.747.42 1.247 1.253 1.24 2.114v13.5c.005.897-.544 1.748-1.332 2.16l-11.88 6.702a2.6 2.6 0 0 1-2.639-.073l-3.565-2.06c-.243-.145-.516-.26-.688-.495.152-.204.422-.23.642-.32.496-.158.95-.4 1.406-.656.115-.08.256-.05.366.022l3.04 1.758c.217.125.437-.04.623-.145l11.665-6.583c.144-.07.224-.222.212-.38V9.334c.016-.18-.087-.344-.25-.417L16.19 2.244a.41.41 0 0 0-.465-.001L3.892 8.93c-.16.073-.27.235-.25.415v13.37c-.014.158.07.307.215.375l3.162 1.785c.594.32 1.323.5 1.977.265a1.5 1.5 0 0 0 .971-1.409l.003-13.29c-.014-.197.172-.36.363-.34h1.52c.2-.005.357.207.33.405L12.18 23.88c.001 1.188-.487 2.48-1.586 3.063-1.354.7-3.028.553-4.366-.12l-3.4-1.88c-.8-.4-1.337-1.264-1.332-2.16v-13.5a2.46 2.46 0 0 1 1.282-2.141L14.656.427zM18.1 9.785c1.727-.1 3.576-.066 5.13.785 1.203.652 1.87 2.02 1.892 3.358-.034.18-.222.28-.394.267-.5-.001-1.002.007-1.504-.003-.213.008-.336-.188-.363-.376-.144-.64-.493-1.273-1.095-1.582-.924-.463-1.996-.44-3.004-.43-.736.04-1.527.103-2.15.535-.48.328-.624 1-.453 1.522.16.383.603.506.964.62 2.082.544 4.287.5 6.33 1.207.845.292 1.672.86 1.962 1.745.378 1.186.213 2.604-.63 3.556-.684.784-1.68 1.2-2.675 1.442-1.323.295-2.695.302-4.038.17-1.263-.144-2.577-.476-3.552-1.336-.834-.724-1.24-1.852-1.2-2.94.01-.184.193-.312.37-.297h1.5c.202-.014.35.16.36.35.093.6.322 1.25.854 1.6 1.026.662 2.313.616 3.487.635.973-.043 2.065-.056 2.86-.7.42-.367.543-.98.43-1.508-.123-.446-.6-.653-1-.8-2.055-.65-4.285-.414-6.32-1.15-.826-.292-1.625-.844-1.942-1.693-.443-1.2-.24-2.687.693-3.607.9-.915 2.22-1.268 3.47-1.394z"
          initial="hidden"
          animate={isVisible ? 'visible' : 'hidden'}
          variants={{
            hidden: {
              opacity: 0,
              pathLength: 0,
              fill: 'rgba(140, 200, 75, 0)',
            },
            visible: {
              opacity: 1,
              pathLength: 1,
              fill: 'rgba(140, 200, 75, 1)',
            },
          }}
          transition={{
            default: { duration: 3, ease: 'easeInOut' },
            fill: { duration: 3, ease: [1, 0, 0.8, 1] },
          }}
        />
      </motion.svg>
    </div>
  );
};

  // ReactLogo.js


// const iconReact = {
//   hidden: {
//     opacity: 0,
//     pathLength: 0,
//     fill: 'rgba(97, 218, 251, 0)',
//   },
//   visible: {
//     opacity: 1,
//     pathLength: 1,
//     fill: 'rgba(97, 218, 251, 1)',
//   },
// };

export const ReactSvg = () =>  {
    const [containerRef, isVisible] = useIntersectionObserver({ threshold: 0.1 });
    return (
  <div className="containerSvg" ref={containerRef}>
    <motion.svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="175.7 78 490.6 436.9"
      className="itemSvg"
    >
      <motion.g
        fill="#61dafb"
        initial="hidden"
        animate={isVisible ? 'visible' : 'hidden'}
        variants={{
            hidden: {
              opacity: 0,
              pathLength: 0,
              fill: 'rgba(97, 218, 251, 0)',
            },
            visible: {
              opacity: 1,
              pathLength: 1,
              fill: 'rgba(97, 218, 251, 1)',
            },
          }}
        transition={{
          default: { duration: 3, ease: 'easeInOut' },
          fill: { duration: 3, ease: [1, 0, 0.8, 1] },
        }}
      >
        <motion.path
          d="m666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9v-22.3c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6v-22.3c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zm-101.4 106.7c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24s9.5 15.8 14.4 23.4zm73.9-208.1c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6s22.9-35.6 58.3-50.6c8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zm53.8 142.9c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6z"
        />
        <motion.circle
          cx="420.9"
          cy="296.5"
          r="45.7"
        />
      </motion.g>
    </motion.svg>
  </div>
)};


// const iconTailwind = {
//     hidden: {
//       opacity: 0,
//       pathLength: 0,
//       fill: 'rgba(6, 182, 212, 0)',
//     },
//     visible: {
//       opacity: 1,
//       pathLength: 1,
//       fill: 'rgba(6, 182, 212, 1)',
//     },
//   };
  
  export const TailwindSvg = () => {
    const [containerRef, isVisible] = useIntersectionObserver({ threshold: 0.1 });
    return (
        <div className="containerSvg" ref={containerRef}>
      <motion.svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox=".15 .13 799.7 479.69"
        className="itemSvg"
      >
        <motion.path
          d="m400 .13c-106.63 0-173.27 53.3-199.93 159.89 39.99-53.3 86.64-73.28 139.95-59.96 30.42 7.6 52.16 29.67 76.23 54.09 39.2 39.78 84.57 85.82 183.68 85.82 106.62 0 173.27-53.3 199.92-159.9-39.98 53.3-86.63 73.29-139.95 59.97-30.41-7.6-52.15-29.67-76.22-54.09-39.2-39.78-84.58-85.82-183.68-85.82zm-199.93 239.84c-106.62 0-173.27 53.3-199.92 159.9 39.98-53.3 86.63-73.29 139.95-59.96 30.41 7.61 52.15 29.67 76.22 54.08 39.2 39.78 84.58 85.83 183.68 85.83 106.63 0 173.27-53.3 199.93-159.9-39.99 53.3-86.64 73.29-139.95 59.96-30.42-7.59-52.16-29.67-76.23-54.08-39.2-39.78-84.57-85.83-183.68-85.83z"
          initial="hidden"
          animate={isVisible ? 'visible' : 'hidden'}
          variants={{
            hidden: {
              opacity: 0,
              pathLength: 0,
              fill: 'rgba(6, 182, 212, 0)',
            },
            visible: {
              opacity: 1,
              pathLength: 1,
              fill: 'rgba(6, 182, 212, 1)',
            },
          }}
          transition={{
            default: { duration: 3, ease: 'easeInOut' },
            fill: { duration: 3, ease: [1, 0, 0.8, 1] },
          }}
        />
      </motion.svg>
    </div>
    );
  };

  // ReduxLogo.js
// import * as React from 'react';
// import { motion } from 'framer-motion';

// const iconRedux = {
//   hidden: {
//     opacity: 0,
//     pathLength: 0,
//     fill: 'rgba(118, 74, 188, 0)',
//   },
//   visible: {
//     opacity: 1,
//     pathLength: 1,
//     fill: 'rgba(118, 74, 188, 1)',
//   },
// };

export const ReduxSvg = () => {
    const [containerRef, isVisible] = useIntersectionObserver({ threshold: 0.1 });
    
    return (
        <div className="containerSvg" ref={containerRef}>
    <motion.svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 244"
      className="itemSvg"

    >
      <motion.path
        d="M177.381 169.733c9.447-.978 16.614-9.122 16.288-18.896-.325-9.773-8.47-17.592-18.243-17.592h-.651c-10.1.326-17.918 8.796-17.592 18.895.326 4.887 2.28 9.122 5.212 12.054-11.076 21.828-28.016 37.791-53.426 51.148-17.266 9.122-35.183 12.38-53.1 10.1-14.66-1.955-26.062-8.47-33.23-19.222-10.424-15.963-11.401-33.23-2.605-50.496 6.19-12.38 15.962-21.502 22.152-26.063-1.303-4.235-3.258-11.402-4.235-16.614-47.237 34.207-42.35 80.468-28.016 102.295 10.75 16.29 32.577 26.389 56.684 26.389 6.515 0 13.03-.652 19.546-2.28 41.699-8.145 73.299-32.905 91.216-69.718zm57.336-40.397c-24.759-28.995-61.245-44.958-102.944-44.958h-5.212c-2.932-5.864-9.122-9.774-15.963-9.774h-.652C99.848 74.93 92.03 83.4 92.355 93.5c.326 9.773 8.47 17.592 18.243 17.592h.651c7.167-.326 13.357-4.887 15.963-11.077h5.864c24.759 0 48.214 7.167 69.39 21.176 16.288 10.751 28.016 24.76 34.531 41.7 5.538 13.683 5.212 27.04-.652 38.443-9.121 17.266-24.432 26.714-44.63 26.714-13.031 0-25.41-3.91-31.926-6.842-3.583 3.258-10.099 8.47-14.66 11.729 14.009 6.515 28.343 10.099 42.025 10.099 31.274 0 54.404-17.267 63.2-34.533 9.447-18.896 8.795-51.474-15.637-79.165zM69.225 175.27c.326 9.774 8.47 17.592 18.243 17.592h.652c10.099-.325 17.917-8.796 17.591-18.895-.325-9.774-8.47-17.592-18.243-17.592h-.651c-.652 0-1.63 0-2.28.325-13.357-22.153-18.895-46.26-16.94-72.323 1.302-19.547 7.818-36.488 19.22-50.497 9.447-12.054 27.69-17.918 40.07-18.243 34.531-.652 49.19 42.351 50.168 59.618 4.235.977 11.402 3.258 16.289 4.887C189.434 27.366 156.857 0 125.584 0c-29.32 0-56.359 21.176-67.11 52.451-14.985 41.7-5.212 81.771 13.031 113.372-1.628 2.28-2.606 5.864-2.28 9.448z"
        initial="hidden"
        animate={isVisible ? 'visible' : 'hidden'}
        variants={{
            hidden: {
              opacity: 0,
              pathLength: 0,
              fill: 'rgba(118, 74, 188, 0)',
            },
            visible: {
              opacity: 1,
              pathLength: 1,
              fill: 'rgba(118, 74, 188, 1)',
            },
          }}
        transition={{
          default: { duration: 3, ease: 'easeInOut' },
          fill: { duration: 3, ease: [1, 0, 0.8, 1] },
        }}
      />
    </motion.svg>
  </div>
    );
    
};


export const WebRTCSvg = () => {
  return (
    <motion.svg
      xmlns="http://www.w3.org/2000/svg"
      width="64"
      height="64"
      viewBox="0 -3.5 256 256"
      whileHover={{ scale: 1.1 }}
      initial={{ opacity: 0, y: 50 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 1, delay: 1 }}
    >
      <g>
        <path
          d="M142.076578,191.086817 C142.076578,159.280656 116.294759,133.494615 84.4885969,133.494615 C52.6782136,133.494615 26.896394,159.280656 26.896394,191.086817 C26.896394,222.892979 52.6782136,248.67902 84.4885969,248.67902 C116.294759,248.67902 142.076578,222.892979 142.076578,191.086817"
          fill="#FF6600"
          transform="translate(84.486486, 191.086817) scale(1, -1) translate(-84.486486, -191.086817)"
        />
        <path
          d="M255.979703,110.454356 C255.979703,78.652416 230.197884,52.862153 198.391722,52.862153 C166.581339,52.862153 140.799519,78.652416 140.799519,110.454356 C140.799519,142.260518 166.581339,168.050781 198.391722,168.050781 C230.197884,168.050781 255.979703,142.260518 255.979703,110.454356"
          fill="#FFCC00"
          transform="translate(198.389611, 110.456467) scale(1, -1) translate(-198.389611, -110.456467)"
        />
        <path
          d="M115.200498,109.176452 C115.200498,77.3745125 89.4186786,51.5842495 57.6082953,51.5842495 C25.8063553,51.5842495 0.0203140271,77.3745125 0.0203140271,109.176452 C0.0203140271,140.982614 25.8063553,166.772877 57.6082953,166.772877 C89.4186786,166.772877 115.200498,140.982614 115.200498,109.176452"
          fill="#0089CC"
          transform="translate(57.610406, 109.178563) scale(1, -1) translate(-57.610406, -109.178563)"
        />
        <path
          d="M230.385749,191.086817 C230.385749,159.280656 204.603929,133.494615 172.789324,133.494615 C140.987384,133.494615 115.201343,159.280656 115.201343,191.086817 C115.201343,222.892979 140.987384,248.67902 172.789324,248.67902 C204.603929,248.67902 230.385749,222.892979 230.385749,191.086817"
          fill="#009939"
          transform="translate(172.793546, 191.086817) scale(1, -1) translate(-172.793546, -191.086817)"
        />
        <path
          d="M185.592001,57.9843213 C185.592001,26.1781597 159.805959,0.392118349 127.999798,0.392118349 C96.1936359,0.392118349 70.4075946,26.1781597 70.4075946,57.9843213 C70.4075946,89.790483 96.1936359,115.576524 127.999798,115.576524 C159.805959,115.576524 185.592001,89.790483 185.592001,57.9843213"
          fill="#BF0000"
          transform="translate(127.999798, 57.984321) scale(1, -1) translate(-127.999798, -57.984321)"
        />
        <path
          d="M140.798675,57.9788331 C140.798675,56.76721 140.904217,55.580917 140.980207,54.3861807 C166.525612,60.2796505 185.590734,83.1189569 185.590734,110.454356 C185.590734,111.665979 185.485192,112.856494 185.409202,114.05123 C159.863796,108.153539 140.798675,85.3142322 140.798675,57.9788331"
          fill="#FC0007"
          transform="translate(163.194704, 84.218705) scale(1, -1) translate(-163.194704, -84.218705)"
        />
        <path
          d="M148.39686,162.570614 C158.322038,145.219495 176.973434,133.495881 198.394255,133.495881 C207.124696,133.495881 215.369643,135.496959 222.787141,138.975626 C212.866185,156.326744 194.214789,168.050358 172.789746,168.050358 C164.059305,168.050358 155.814358,166.049281 148.39686,162.570614"
          fill="#1CD306"
          transform="translate(185.592001, 150.773120) scale(1, -1) translate(-185.592001, -150.773120)"
        />
        <path
          d="M115.200498,191.086817 C115.200498,177.015947 120.258075,164.139813 128.642338,154.138646 C137.018157,164.139813 142.075734,177.015947 142.075734,191.086817 C142.075734,205.157688 137.018157,218.033822 128.642338,228.034989 C120.258075,218.033822 115.200498,205.157688 115.200498,191.086817"
          fill="#0F7504"
          transform="translate(128.638116, 191.086817) scale(1, -1) translate(-128.638116, -191.086817)"
        />
        <path
          d="M34.806984,138.212768 C41.8023132,135.190043 49.5026635,133.497148 57.6082953,133.497148 C78.818032,133.497148 97.2963396,144.992791 107.293286,162.061056 C100.297956,165.083782 92.5933844,166.772455 84.4919743,166.772455 C63.2822376,166.772455 44.7997083,155.276811 34.806984,138.212768"
          fill="#0C5E87"
          transform="translate(71.050135, 150.134801) scale(1, -1) translate(-71.050135, -150.134801)"
        />
        <path
          d="M70.6545631,114.036032 C70.5194692,112.431792 70.4054838,110.819109 70.4054838,109.176875 C70.4054838,81.862584 89.4410536,59.044386 114.956907,53.1255861 C115.087779,54.7298257 115.201765,56.3425087 115.201765,57.9805218 C115.201765,85.2948125 96.1704167,108.121454 70.6545631,114.036032"
          fill="#6B0001"
          transform="translate(92.803624, 83.580809) scale(1, -1) translate(-92.803624, -83.580809)"
        />
        <path
          d="M128.642338,114.13605 C128.642338,102.496282 136.305586,92.5849252 146.67203,88.2781322 C155.621572,86.690926 162.396799,81.8724016 166.271528,75.0242062 C171.416968,81.2693301 174.8949,89.7558971 174.8949,98.9894935 C174.8949,110.629261 167.231652,120.540617 156.865208,124.847411 C147.912016,126.434617 141.13761,131.253141 137.262881,138.101337 C132.117441,131.856213 128.642338,123.369646 128.642338,114.13605"
          fill="#D1D1D1"
          transform="translate(151.768614, 106.187859) scale(1, -1) translate(-151.768614, -106.187859)"
        />
        <path
          d="M141.716132,114.072752 C145.472496,107.830454 152.249334,102.980168 160.297643,101.401517 C162.471878,95.3586414 167.645208,90.4994174 174.672918,88.4872741 C176.793517,93.6781084 178.038859,99.5300366 178.038859,105.599567 C178.038859,106.716507 177.979736,107.824119 177.887208,108.929276 C171.860956,110.945642 166.693196,115.807309 164.518961,121.850185 C156.47173,123.429968 149.697324,128.289192 145.8213,135.141544 C142.061852,128.899247 140.81651,123.047319 140.81651,116.975468 C140.81651,115.858528 140.875633,114.750916 140.968161,113.645759"
          fill="#F0F0F0"
          transform="translate(159.454160, 112.020772) scale(1, -1) translate(-159.454160, -112.020772)"
        />
        <path
          d="M101.4991,75.0640487 C105.338147,81.1654534 106.583489,89.6555086 106.583489,98.8797834 C106.583489,110.505538 100.411935,120.40329 91.3136852,124.718615 C83.2643758,126.293615 76.4885266,131.142018 72.6137974,137.985319 C67.4741037,131.73596 63.9999318,123.255739 63.9999318,114.011028 C63.9999318,102.385273 70.1714869,92.4875211 79.2697366,88.1721957 C87.3182014,86.5954748 94.0940507,81.747071 97.9687799,74.9037701"
          fill="#FFB900"
          transform="translate(85.291710, 112.020772) scale(1, -1) translate(-85.291710, -112.020772)"
        />
        <path
          d="M84.4920963,57.9784104 C88.2384604,64.2171942 89.4838023,72.7037612 89.4838023,81.9373577 C89.4838023,93.5771254 82.8205546,103.488481 72.4541107,107.795274 C64.4048014,109.383481 57.6297414,114.233273 53.7542891,121.080625 C48.6088496,114.835501 46.7589301,106.349934 46.7589301,97.1163382 C46.7589301,85.4765705 53.4221778,75.5652145 63.7886217,71.2584216 C71.8370864,69.6712154 78.6129357,64.8214234 82.4876649,57.978122"
          fill="#F28C00"
          transform="translate(68.582697, 89.529156) scale(1, -1) translate(-68.582697, -89.529156)"
        />
      </g>
    </motion.svg>
  );
};

export default WebRTCSvg;
